package com.ust.rest.services;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;



import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Propagation;
import org.springframework.transaction.annotation.Transactional;

import com.ust.rest.repository.ProductRepository;
import com.ust.rest.repository.UserRepository;
import com.ust.rest.resource.Product;
import com.ust.rest.resource.User;

@Service
public class ProductService {

	
	@Autowired
ProductRepository productRepository;
	@Autowired
	UserRepository userRepository;
	public Product getProduct(long productId) {
		Optional<Product> optional =productRepository.findById(productId);
		if(optional.isPresent())
			return optional.get();
		else
			return null;
		}
//public Product getProduct(long productId) {
//	return repository.getProduct(productId);
//}
//
public List<Product> getProducts()
{
	return productRepository.findAll();
}
//

@Transactional(propagation  = Propagation.REQUIRED)
public boolean add(Product product) {
//	if(validate(product))
//	{
	Product productT = productRepository.save(product);
	User user  = new User();
	user.setUserId(14L);
	user.setDateTime(System.currentTimeMillis()+"98790708708787087790097079955555");
	User userT = userRepository.save(user);
	System.out.println(userT);
	if(userT != null && productT != null)
	{
		return true;
	}
	else
	{
		throw new RuntimeException("record not inserted....");		}
	
	
	
//		Product productT = productRepository.save(product);
//		User user  = new User();
//		user.setUserId(14L);
//		user.setDateTime(System.currentTimeMillis()+"98790708708787087790097079955555");
//		User userT = userRepository.save(user);
//		System.out.println(userT);
//		if(userT != null && productT != null)
//		{
//			return true;
//		}
//		else
//		{
//			throw new RuntimeException("record not inserted....");		}
	
		
		//return false;//cannot create duplicate product
//	}
//	else
//	{
//	productRepository.save(product);
//	return true;}
}
public boolean validate(Product product)
{		
	if(product.getName().equals("acc"))
	{
		return true;
	}else
	{
		return false;
	}
}
}
//public Product updateProduct(Product product) {
//	return repository.updateProduct(product);
//}
//public void deleteProduct(long productId) {
//	 repository.delete(productId);
//}
//}
